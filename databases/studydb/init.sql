DROP DATABASE IF EXISTS study_db;
DROP OWNED BY study_db_owner;
DROP ROLE IF EXISTS study_db_owner;
DROP OWNED BY role_ro;
DROP OWNED BY role_rw;
DROP ROLE IF EXISTS role_ro;
DROP ROLE IF EXISTS role_rw;
DROP USER IF EXISTS user_owner;
DROP USER IF EXISTS user_db;

CREATE ROLE role_ro;
ALTER ROLE role_ro WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION;
CREATE ROLE role_rw;
ALTER ROLE role_rw WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION;
CREATE ROLE study_db_owner;
ALTER ROLE study_db_owner WITH LOGIN;

CREATE USER user_owner ENCRYPTED PASSWORD 'password';
GRANT study_db_owner TO user_owner;

CREATE DATABASE study_db
    ENCODING = 'UTF8'
    OWNER = study_db_owner;

\c study_db

ALTER DATABASE study_db SET datestyle TO 'ISO, DMY';

ALTER DEFAULT PRIVILEGES FOR ROLE study_db_owner REVOKE SELECT ON SEQUENCES FROM role_ro;
ALTER DEFAULT PRIVILEGES FOR ROLE study_db_owner REVOKE SELECT, USAGE ON SEQUENCES FROM role_rw;
ALTER DEFAULT PRIVILEGES FOR ROLE study_db_owner REVOKE SELECT ON TABLES FROM role_ro;
ALTER DEFAULT PRIVILEGES FOR ROLE study_db_owner REVOKE SELECT, INSERT, DELETE, UPDATE ON TABLES FROM role_rw;
ALTER DEFAULT PRIVILEGES FOR ROLE study_db_owner REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;

ALTER DEFAULT PRIVILEGES FOR ROLE user_owner GRANT SELECT ON SEQUENCES TO role_ro;
ALTER DEFAULT PRIVILEGES FOR ROLE user_owner GRANT SELECT, USAGE ON SEQUENCES TO role_rw;
ALTER DEFAULT PRIVILEGES FOR ROLE user_owner GRANT SELECT ON TABLES TO role_ro;
ALTER DEFAULT PRIVILEGES FOR ROLE user_owner GRANT SELECT, INSERT, DELETE, UPDATE ON TABLES TO role_rw;
ALTER DEFAULT PRIVILEGES FOR ROLE user_owner REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
ALTER DEFAULT PRIVILEGES FOR ROLE user_owner GRANT USAGE ON SCHEMAS TO role_ro,role_rw;

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT SELECT ON SEQUENCES TO role_ro;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT SELECT, USAGE ON SEQUENCES TO role_rw;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT SELECT ON TABLES TO role_ro;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT SELECT, INSERT, DELETE, UPDATE ON TABLES TO role_rw;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT USAGE ON SCHEMAS TO role_ro,role_rw;

REVOKE ALL ON DATABASE study_db FROM public;

GRANT CONNECT ON DATABASE study_db TO study_db_owner;

CREATE USER user_db ENCRYPTED PASSWORD 'password';
GRANT role_ro TO user_db;
GRANT role_rw TO user_db;
GRANT study_db_owner TO user_db;
